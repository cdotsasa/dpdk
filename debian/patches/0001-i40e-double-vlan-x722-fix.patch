net/i40e: Fix double vlan config API for X722

When configuring double vlan, for X722 driver set per port
L2TAG registers explicitly

Signed-off-by: Shweta Choudah <shweta.choudaha@att.com>
---
 drivers/net/i40e/i40e_ethdev.c |   61 ++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 60 insertions(+), 1 deletion(-)

--- a/drivers/net/i40e/i40e_ethdev.c
+++ b/drivers/net/i40e/i40e_ethdev.c
@@ -6076,12 +6076,71 @@ i40e_dev_init_vlan(struct rte_eth_dev *d
 	return ret;
 }
 
+/*
+ * These are based on X710 datasheet rev 3.65
+ * section 10.2.2.7.1 L2 Tag - Enable
+ * Input from Intel for X722 driver for
+ * enable/disable values as datasheet does not
+ * specify it
+ */
+#define I40E_L2TAGS_EN_VAL    0xF8
+#define I40E_L2TAGS_DIS_VAL    0x408
+#define I40E_PER_PORT_L2TAGSEN(_i)  (0x001C0B20 + ((_i) * 4))
+
 static int
 i40e_vsi_config_double_vlan(struct i40e_vsi *vsi, int on)
 {
 	struct i40e_hw *hw = I40E_VSI_TO_HW(vsi);
+	uint32_t reg_addr;
+	uint64_t reg_r;
+	uint64_t reg_w;
+	int ret;
+
+	ret = i40e_aq_set_port_parameters(hw, vsi->seid, 0, 1, on, NULL);
+
+	if (ret != I40E_SUCCESS) {
+		PMD_DRV_LOG(ERR, "aq set parameter failed");
+		return ret;
+	}
+
+	if (hw->mac.type != I40E_MAC_X722)
+		return ret;
 
-	return i40e_aq_set_port_parameters(hw, vsi->seid, 0, 1, on, NULL);
+	/* Set per port registers to enable L2TAG for X722 */
+	reg_addr = I40E_PER_PORT_L2TAGSEN(hw->port);
+	ret = i40e_aq_debug_read_register(hw, reg_addr,
+					  &reg_r, NULL);
+	if (ret != I40E_SUCCESS) {
+		PMD_DRV_LOG(ERR,
+		"Fail to debug read from 0x%"PRIx32, reg_addr);
+		return -EIO;
+	}
+
+	PMD_DRV_LOG(DEBUG, "Read from 0x%"PRIx32": 0x%"PRIx64, reg_addr,
+		    reg_r);
+	if (on)
+		reg_w = I40E_L2TAGS_EN_VAL;
+	else
+		reg_w = I40E_L2TAGS_DIS_VAL;
+
+	if (reg_r == reg_w) {
+		PMD_DRV_LOG(DEBUG, "No need to write register");
+		return 0;
+	}
+	ret = i40e_aq_debug_write_global_register(hw,
+						  reg_addr,
+						  reg_w, NULL);
+	if (ret != I40E_SUCCESS) {
+		PMD_DRV_LOG(ERR,
+			    "write failed 0x%"PRIx32": 0x%"PRIx64,
+			    reg_addr, reg_w);
+
+		return -EIO;
+	}
+	PMD_DRV_LOG(DEBUG,
+		    "write success 0x%"PRIx32": 0x%"PRIx64,
+		    reg_addr, reg_w);
+	return ret;
 }
 
 static int
